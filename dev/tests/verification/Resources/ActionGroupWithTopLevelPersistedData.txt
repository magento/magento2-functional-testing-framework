<?php
namespace Magento\AcceptanceTest\_generated\Backend;

use Magento\FunctionalTestingFramework\AcceptanceTester;
use Magento\FunctionalTestingFramework\DataGenerator\Handlers\DataObjectHandler;
use Magento\FunctionalTestingFramework\DataGenerator\Persist\DataPersistenceHandler;
use Magento\FunctionalTestingFramework\DataGenerator\Objects\EntityDataObject;
use \Codeception\Util\Locator;
use Yandex\Allure\Adapter\Annotation\Features;
use Yandex\Allure\Adapter\Annotation\Stories;
use Yandex\Allure\Adapter\Annotation\Title;
use Yandex\Allure\Adapter\Annotation\Description;
use Yandex\Allure\Adapter\Annotation\Parameter;
use Yandex\Allure\Adapter\Annotation\Severity;
use Yandex\Allure\Adapter\Model\SeverityLevel;
use Yandex\Allure\Adapter\Annotation\TestCaseId;

/**
 * @Title("A Functional Cest")
 * @group functional
 * @Features({"Action Group Functional Cest"})
 * @Stories({"MQE-433"})
 */
class ActionGroupWithTopLevelPersistedDataCest
{
	/**
	  * @var DataPersistenceHandler $createPersonParam;
	 */
	protected $createPersonParam;

	public function _before(AcceptanceTester $I)
	{
		$I->amGoingTo("create entity that has the stepKey: createPersonParam");
		$ReplacementPerson = DataObjectHandler::getInstance()->getObject("ReplacementPerson");
		$this->createPersonParam = new DataPersistenceHandler($ReplacementPerson);
		$this->createPersonParam->createEntity();
		$I->fillField("#foo", "myData1");
		$I->fillField("#bar", "myData2");
	}

	public function _after(AcceptanceTester $I)
	{
		$I->fillField("#foo", "myData1");
		$I->fillField("#bar", "myData2");
	}

	/**
	 * @Severity(level = SeverityLevel::CRITICAL)
	 * @Parameter(name = "AcceptanceTester", value="$I")
	 * @param AcceptanceTester $I
	 * @return void
	 * @throws \Exception
	 */
	public function ActionGroupWithTopLevelPersistedData(AcceptanceTester $I)
	{
		$I->amOnPage("/" . $this->createPersonParam->getCreatedDataByName('firstname') . "/" . $this->createPersonParam->getCreatedDataByName('lastname') . ".html");
		$I->fillField("#foo", $this->createPersonParam->getCreatedDataByName('firstname'));
		$I->fillField("#bar", $this->createPersonParam->getCreatedDataByName('lastname'));
		$I->searchAndMultiSelectOption("#foo", [$this->createPersonParam->getCreatedDataByName('firstname'), $this->createPersonParam->getCreatedDataByName('lastname')]);
		$I->see("#element ." . $this->createPersonParam->getCreatedDataByName('firstname'));
	}
}
