<?php
namespace Magento\AcceptanceTest\_default\Backend;

use Magento\FunctionalTestingFramework\AcceptanceTester;
use Magento\FunctionalTestingFramework\DataGenerator\Handlers\DataObjectHandler;
use Magento\FunctionalTestingFramework\DataGenerator\Persist\DataPersistenceHandler;
use Magento\FunctionalTestingFramework\DataGenerator\Objects\EntityDataObject;
use Magento\FunctionalTestingFramework\Extension\TestContextExtension;
use \Codeception\Util\Locator;
use Yandex\Allure\Adapter\Annotation\Features;
use Yandex\Allure\Adapter\Annotation\Stories;
use Yandex\Allure\Adapter\Annotation\Title;
use Yandex\Allure\Adapter\Annotation\Description;
use Yandex\Allure\Adapter\Annotation\Parameter;
use Yandex\Allure\Adapter\Annotation\Severity;
use Yandex\Allure\Adapter\Model\SeverityLevel;
use Yandex\Allure\Adapter\Annotation\TestCaseId;

/**
 * @Title("A Functional Cest")
 * @group functional
 */
class MergedReferencesTestCest
{
	/**
	  * @param AcceptanceTester $I
	  * @throws \Exception
	  */
	public function _before(AcceptanceTester $I)
	{
		TestContextExtension::setTestPhase(TestContextExtension::TEST_PHASE_BEFORE);
		$I->amOnPage("/beforeUrl");
	}

	/**
	  * @param AcceptanceTester $I
	  * @throws \Exception
	  */
	public function _after(AcceptanceTester $I)
	{
		TestContextExtension::setTestPhase(TestContextExtension::TEST_PHASE_AFTER);
		$I->amOnPage("/afterUrl");
	}

	/**
	  * @param AcceptanceTester $I
	  * @throws \Exception
	  */
	public function _failed(AcceptanceTester $I)
	{
		$I->saveScreenshot();
		if (TestContextExtension::getTestPhase() !==TestContextExtension::TEST_PHASE_AFTER) {
			try {
				$this->_after($I);
			} catch (\Exception $failedException) {
			}
		}
	}

	/**
	 * @Severity(level = SeverityLevel::CRITICAL)
	 * @Features({"Merge Functional Cest"})
	 * @Stories({"MQE-433"})
	 * @Parameter(name = "AcceptanceTester", value="$I")
	 * @param AcceptanceTester $I
	 * @return void
	 * @throws \Exception
	 */
	public function MergedReferencesTest(AcceptanceTester $I)
	{
		TestContextExtension::setTestPhase(TestContextExtension::TEST_PHASE_TEST);
		$I->fillField("#merge", "merged");
		$I->fillField("#newElement", "newField");
	}
}
