<?php
namespace Magento\AcceptanceTest\_default\Backend;

use Magento\FunctionalTestingFramework\AcceptanceTester;
use Magento\FunctionalTestingFramework\DataGenerator\Handlers\CredentialStore;
use Magento\FunctionalTestingFramework\DataGenerator\Handlers\PersistedObjectHandler;
use \Codeception\Util\Locator;
use Yandex\Allure\Adapter\Annotation\Features;
use Yandex\Allure\Adapter\Annotation\Stories;
use Yandex\Allure\Adapter\Annotation\Title;
use Yandex\Allure\Adapter\Annotation\Description;
use Yandex\Allure\Adapter\Annotation\Parameter;
use Yandex\Allure\Adapter\Annotation\Severity;
use Yandex\Allure\Adapter\Model\SeverityLevel;
use Yandex\Allure\Adapter\Annotation\TestCaseId;

/**
 */
class ActionGroupWithStepKeyReferencesCest
{
	/**
	 * @Features({"TestModule"})
	 * @Parameter(name = "AcceptanceTester", value="$I")
	 * @param AcceptanceTester $I
	 * @return void
	 * @throws \Exception
	 */
	public function ActionGroupWithStepKeyReferences(AcceptanceTester $I)
	{
		$I->amGoingTo("create entity that has the stepKey: createSimpleDataActionGroup");
		PersistedObjectHandler::getInstance()->createEntity(
			"createSimpleDataActionGroup",
			"test",
			"simpleData",
			[],
			null
		);
		$grabTextDataActionGroup = $I->grabTextFrom(".class");
		$I->fillField(".{$grabTextDataActionGroup}", PersistedObjectHandler::getInstance()->retrieveEntityField('createSimpleDataActionGroup', 'field', 'test'));
		$I->comment("Invocation stepKey will not be appended in non stepKey instances");
		$I->click($action0);
		$I->fillField($action1);
		$I->comment("Invocation stepKey will be appended in non stepKey instances");
		$action3ActionGroup = $I->executeJS($action3ActionGroup);
		$action4ActionGroup = $I->magentoCLI($action4ActionGroup, "\"stuffHere\"");
		$I->comment($action4ActionGroup);
		$date = new \DateTime();
		$date->setTimestamp(strtotime("{$action5}"));
		$date->setTimezone(new \DateTimeZone("America/Los_Angeles"));
		$action5ActionGroup = $date->format("H:i:s");
		$action6ActionGroup = $I->formatMoney($action6ActionGroup);
		$I->amGoingTo("delete entity that has the createDataKey: {$action7ActionGroupActionGroup}");
		PersistedObjectHandler::getInstance()->deleteEntity(
			"{$action7ActionGroupActionGroup}",
			"test"
		);
		$I->amGoingTo("get entity that has the stepKey: action8ActionGroup");
		PersistedObjectHandler::getInstance()->getEntity(
			"action8ActionGroup",
			"test",
			"{$action8}",
			[],
			null
		);
		$I->amGoingTo("update entity that has the createdDataKey: 1");
		PersistedObjectHandler::getInstance()->updateEntity(
			"1",
			"test",
			"{$action9}",
			[]
		);
		$I->amGoingTo("create entity that has the stepKey: action10ActionGroup");
		PersistedObjectHandler::getInstance()->createEntity(
			"action10ActionGroup",
			"test",
			"{$action10}",
			[],
			null
		);
		$action11ActionGroup = $I->grabAttributeFrom($action11ActionGroup, "someInput");
		$action12ActionGroup = $I->grabCookie($action12ActionGroup, ['domain' => 'www.google.com']);
		$action13ActionGroup = $I->grabFromCurrentUrl($action13ActionGroup);
		$action14ActionGroup = $I->grabMultiple($action14ActionGroup);
		$action15ActionGroup = $I->grabTextFrom($action15ActionGroup);
		$action16ActionGroup = $I->grabValueFrom($action16ActionGroup);
	}
}
