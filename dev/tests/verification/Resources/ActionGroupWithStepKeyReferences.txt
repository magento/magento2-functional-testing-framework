<?php
namespace Magento\AcceptanceTest\_default\Backend;

use Magento\FunctionalTestingFramework\AcceptanceTester;
use Magento\FunctionalTestingFramework\DataGenerator\Handlers\DataObjectHandler;
use Magento\FunctionalTestingFramework\DataGenerator\Persist\DataPersistenceHandler;
use Magento\FunctionalTestingFramework\DataGenerator\Objects\EntityDataObject;
use Magento\FunctionalTestingFramework\DataGenerator\Handlers\CredentialStore;
use \Codeception\Util\Locator;
use Yandex\Allure\Adapter\Annotation\Features;
use Yandex\Allure\Adapter\Annotation\Stories;
use Yandex\Allure\Adapter\Annotation\Title;
use Yandex\Allure\Adapter\Annotation\Description;
use Yandex\Allure\Adapter\Annotation\Parameter;
use Yandex\Allure\Adapter\Annotation\Severity;
use Yandex\Allure\Adapter\Model\SeverityLevel;
use Yandex\Allure\Adapter\Annotation\TestCaseId;

/**
 */
class ActionGroupWithStepKeyReferencesCest
{
	/**
	 * @Features({"TestModule"})
	 * @Parameter(name = "AcceptanceTester", value="$I")
	 * @param AcceptanceTester $I
	 * @return void
	 * @throws \Exception
	 */
	public function ActionGroupWithStepKeyReferences(AcceptanceTester $I)
	{
		$I->amGoingTo("create entity that has the stepKey: createSimpleDataActionGroup");
		$simpleData = DataObjectHandler::getInstance()->getObject("simpleData");
		$createSimpleDataActionGroup = new DataPersistenceHandler($simpleData, []);
		$createSimpleDataActionGroup->createEntity();
		$grabTextDataActionGroup = $I->grabTextFrom(".class");
		$I->fillField(".{$grabTextDataActionGroup}", $createSimpleDataActionGroup->getCreatedDataByName('field'));
		$I->click($action0);
		$I->fillField($action1);
		$action3ActionGroup = $I->executeJS($action3ActionGroup);
		$action4ActionGroup = $I->magentoCLI($action4ActionGroup, "\"stuffHere\"");
		$I->comment($action4ActionGroup);
		$date = new \DateTime();
		$date->setTimestamp(strtotime("{$action5}"));
		$date->setTimezone(new \DateTimeZone("America/Los_Angeles"));
		$action5ActionGroup = $date->format("H:i:s");
		$action6ActionGroup = $I->formatMoney($action6ActionGroup);
		$I->amGoingTo("delete entity that has the createDataKey: {$action7}");
		${$action7}->deleteEntity();
		$I->amGoingTo("get entity that has the stepKey: action8ActionGroup");
		${$action8} = DataObjectHandler::getInstance()->getObject("{$action8}");
		$action8ActionGroup = new DataPersistenceHandler(${$action8});
		$action8ActionGroup->getEntity(null);
		$I->amGoingTo("update entity that has the createdDataKey: 1");
		$1->updateEntity("{$action9}");
		$I->amGoingTo("create entity that has the stepKey: action10ActionGroup");
		${$action10} = DataObjectHandler::getInstance()->getObject("{$action10}");
		$action10ActionGroup = new DataPersistenceHandler(${$action10}, []);
		$action10ActionGroup->createEntity();
		$action11ActionGroup = $I->grabAttributeFrom($action11ActionGroup, "someInput");
		$action12ActionGroup = $I->grabCookie($action12ActionGroup, ['domain' => 'www.google.com']);
		$action13ActionGroup = $I->grabFromCurrentUrl($action13ActionGroup);
		$action14ActionGroup = $I->grabMultiple($action14ActionGroup);
		$action15ActionGroup = $I->grabTextFrom($action15ActionGroup);
		$action16ActionGroup = $I->grabValueFrom($action16ActionGroup);
	}
}
