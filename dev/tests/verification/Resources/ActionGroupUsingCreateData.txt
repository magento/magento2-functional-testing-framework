<?php
namespace Magento\AcceptanceTest\_default\Backend;

use Magento\FunctionalTestingFramework\AcceptanceTester;
use Magento\FunctionalTestingFramework\DataGenerator\Handlers\DataObjectHandler;
use Magento\FunctionalTestingFramework\DataGenerator\Persist\DataPersistenceHandler;
use Magento\FunctionalTestingFramework\DataGenerator\Objects\EntityDataObject;
use Magento\FunctionalTestingFramework\DataGenerator\Handlers\CredentialStore;
use \Codeception\Util\Locator;
use Yandex\Allure\Adapter\Annotation\Features;
use Yandex\Allure\Adapter\Annotation\Stories;
use Yandex\Allure\Adapter\Annotation\Title;
use Yandex\Allure\Adapter\Annotation\Description;
use Yandex\Allure\Adapter\Annotation\Parameter;
use Yandex\Allure\Adapter\Annotation\Severity;
use Yandex\Allure\Adapter\Model\SeverityLevel;
use Yandex\Allure\Adapter\Annotation\TestCaseId;

/**
 */
class ActionGroupUsingCreateDataCest
{
	/**
	  * @var DataPersistenceHandler $createCategoryKey1;
	  */
	protected $createCategoryKey1;

	/**
	  * @var DataPersistenceHandler $createConfigProductKey1;
	  */
	protected $createConfigProductKey1;

	/**
	  * @param AcceptanceTester $I
	  * @throws \Exception
	  */
	public function _before(AcceptanceTester $I)
	{
		$I->amGoingTo("create entity that has the stepKey: createCategoryKey1");
		$ApiCategory = DataObjectHandler::getInstance()->getObject("ApiCategory");
		$this->createCategoryKey1 = new DataPersistenceHandler($ApiCategory, []);
		$this->createCategoryKey1->createEntity();
		$I->amGoingTo("create entity that has the stepKey: createConfigProductKey1");
		$ApiConfigurableProduct = DataObjectHandler::getInstance()->getObject("ApiConfigurableProduct");
		$this->createConfigProductKey1 = new DataPersistenceHandler($ApiConfigurableProduct, [$this->createCategoryKey1]);
		$this->createConfigProductKey1->createEntity();
	}

	/**
	 * @Features({"TestModule"})
	 * @Parameter(name = "AcceptanceTester", value="$I")
	 * @param AcceptanceTester $I
	 * @return void
	 * @throws \Exception
	 */
	public function ActionGroupUsingCreateData(AcceptanceTester $I)
	{
	}
}
