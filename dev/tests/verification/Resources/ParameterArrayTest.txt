<?php
namespace Magento\AcceptanceTest\_generated\Backend;

use Magento\FunctionalTestingFramework\AcceptanceTester;
use Magento\FunctionalTestingFramework\DataGenerator\Handlers\DataObjectHandler;
use Magento\FunctionalTestingFramework\DataGenerator\Persist\DataPersistenceHandler;
use Magento\FunctionalTestingFramework\DataGenerator\Objects\EntityDataObject;
use \Codeception\Util\Locator;
use Yandex\Allure\Adapter\Annotation\Features;
use Yandex\Allure\Adapter\Annotation\Stories;
use Yandex\Allure\Adapter\Annotation\Title;
use Yandex\Allure\Adapter\Annotation\Description;
use Yandex\Allure\Adapter\Annotation\Parameter;
use Yandex\Allure\Adapter\Annotation\Severity;
use Yandex\Allure\Adapter\Model\SeverityLevel;
use Yandex\Allure\Adapter\Annotation\TestCaseId;

/**
 */
class ParameterArrayTestCest
{
	/**
	 * @Parameter(name = "AcceptanceTester", value="$I")
	 * @param AcceptanceTester $I
	 * @return void
	 */
	public function ParameterArrayTest(AcceptanceTester $I)
	{
		$I->amGoingTo("create entity that has the stepKey: simpleDataKey");
		$simpleParamData = DataObjectHandler::getInstance()->getObject("simpleParamData");
		$simpleDataKey = new DataPersistenceHandler($simpleParamData);
		$simpleDataKey->createEntity();
		$I->searchAndMultiSelectOption("#selector", ["name"]);
		$I->searchAndMultiSelectOption("#selector", [msq("simpleParamData")."prename"]);
		$I->searchAndMultiSelectOption("#selector", ["postname".msq("simpleParamData")]);
		$I->searchAndMultiSelectOption("#selector", [$simpleDataKey->getCreatedDataByName('name')]);
		$I->searchAndMultiSelectOption("#selector", ["name", $simpleDataKey->getCreatedDataByName('name')]);
		$I->searchAndMultiSelectOption("#selector", ['someKey' => $simpleDataKey->getCreatedDataByName('name')]);
		$I->searchAndMultiSelectOption("#selector", ['someKey' => "name"]);
		$I->searchAndMultiSelectOption("#selector", ['someKey' => msq("simpleParamData")."prename"]);
		$I->searchAndMultiSelectOption("#selector", ['someKey' => "postname".msq("simpleParamData")]);
		$I->unselectOption("#selector", ['foo']);
		$I->unselectOption("#selector", ['foo', 'bar']);
		$I->unselectOption("#selector", ["name"]);
		$I->unselectOption("#selector", [msq("simpleParamData")."prename"]);
		$I->unselectOption("#selector", ["postname".msq("simpleParamData")]);
		$I->unselectOption("#selector", [$simpleDataKey->getCreatedDataByName('name')]);
		$I->unselectOption("#selector", ["name", $simpleDataKey->getCreatedDataByName('name')]);
	}
}
