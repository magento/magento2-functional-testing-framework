<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<xs:schema elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">

    <!-- Container types -->

    <xs:element name="tests" type="configType"/>
    <xs:complexType name="configType">
        <xs:sequence>
            <xs:choice>
                <xs:element type="testType" name="test" maxOccurs="unbounded"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="annotationsType">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element type="annotationType" name="features" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="annotationType" name="stories" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="annotationType" name="title" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="annotationType" name="description" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="annotationType" name="severity" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="annotationType" name="testCaseId" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="annotationType" name="useCaseId" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="annotationType" name="group" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="annotationType" name="return" minOccurs="0" maxOccurs="unbounded"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="annotationType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="value" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="hookType">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="testTypeTags"/>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="testType">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="testTypeTags" />
            <xs:element type="hookType" name="before" minOccurs="0" maxOccurs="1"/>
            <xs:element type="hookType" name="after" minOccurs="0" maxOccurs="1"/>
            <xs:element type="annotationsType" name="annotations" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute type="xs:string" name="name"/>
        <xs:attribute type="xs:boolean" name="remove" default="false"/>
    </xs:complexType>
    <xs:group name="testTypeTags">
        <xs:choice>
            <xs:group ref="actionTypeTags"/>
            <xs:element type="actions" name="actionGroup" minOccurs="0"/>
        </xs:choice>
    </xs:group>

    <xs:group name="actionTypeTags">
        <xs:choice>
            <xs:group ref="dataOperationTags"/>
            <xs:element type="removeActionType" name="remove" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="acceptPopupType" name="acceptPopup" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="amOnPageType" name="amOnPage" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="amOnSubdomainType" name="amOnSubdomain" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="amOnUrlType" name="amOnUrl" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="appendFieldType" name="appendField" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="assertElementContainsAttributeType" name="assertElementContainsAttribute" minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element type="attachFileType" name="attachFile" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="cancelPopupType" name="cancelPopup" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="checkOptionType" name="checkOption" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="clearFieldType" name="clearField" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="clickType" name="click" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="clickWithLeftButtonType" name="clickWithLeftButton" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="clickWithRightButtonType" name="clickWithRightButton" minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element type="closeAdminNotificationType" name="closeAdminNotification" minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element type="closeTabType" name="closeTab" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="commentType" name="comment" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="conditionalClickType" name="conditionalClick" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="updateDataType" name="updateData" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="getDataType" name="getData" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="dontSeeType" name="dontSee" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="dontSeeCheckboxIsCheckedType" name="dontSeeCheckboxIsChecked" minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element type="dontSeeCookieType" name="dontSeeCookie" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="dontSeeCurrentUrlEqualsType" name="dontSeeCurrentUrlEquals" minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element type="dontSeeCurrentUrlMatchesType" name="dontSeeCurrentUrlMatches" minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element type="dontSeeFullUrlEqualsType" name="dontSeeFullUrlEquals" minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element type="dontSeeFullUrlMatchesType" name="dontSeeFullUrlMatches" minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element type="dontSeeElementType" name="dontSeeElement" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="dontSeeElementInDOMType" name="dontSeeElementInDOM" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="dontSeeInCurrentUrlType" name="dontSeeInCurrentUrl" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="dontSeeInFullUrlType" name="dontSeeInFullUrl" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="dontSeeInFieldType" name="dontSeeInField" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="dontSeeInFormFieldsType" name="dontSeeInFormFields" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="dontSeeInPageSourceType" name="dontSeeInPageSource" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="dontSeeInSourceType" name="dontSeeInSource" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="dontSeeInTitleType" name="dontSeeInTitle" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="dontSeeJsErrorType" name="dontSeeJsError" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="dontSeeLinkType" name="dontSeeLink" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="dontSeeOptionIsSelectedType" name="dontSeeOptionIsSelected" minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element type="doubleClickType" name="doubleClick" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="dragAndDropType" name="dragAndDrop" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="executeInSeleniumType" name="executeInSelenium" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="executeJSType" name="executeJS" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="fillFieldType" name="fillField" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="formatMoneyType" name="formatMoney" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="grabAttributeFromType" name="grabAttributeFrom" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="grabCookieType" name="grabCookie" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="grabFromCurrentUrlType" name="grabFromCurrentUrl" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="grabFromFullUrlType" name="grabFromFullUrl" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="grabMultipleType" name="grabMultiple" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="grabPageSourceType" name="grabPageSource" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="grabTextFromType" name="grabTextFrom" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="grabValueFromType" name="grabValueFrom" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="loadSessionSnapshotType" name="loadSessionSnapshot" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="makeScreenshotType" name="makeScreenshot" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="maximizeWindowType" name="maximizeWindow" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="moveBackType" name="moveBack" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="moveForwardType" name="moveForward" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="moveMouseOverType" name="moveMouseOver" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="mSetLocaleType" name="mSetLocale" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="mResetLocaleType" name="mResetLocale" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="openNewTabType" name="openNewTab" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="parseFloatType" name="parseFloat" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="pauseExecutionType" name="pauseExecution" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="performOnType" name="performOn" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="pressKeyType" name="pressKey" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="reloadPageType" name="reloadPage" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="resetCookieType" name="resetCookie" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="resizeWindowType" name="resizeWindow" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="saveSessionSnapshotType" name="saveSessionSnapshot" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="scrollToType" name="scrollTo" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="scrollToTopOfPageType" name="scrollToTopOfPage" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="searchAndMultiSelectOptionType" name="searchAndMultiSelectOption" minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element type="seeType" name="see" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="seeCheckboxIsCheckedType" name="seeCheckboxIsChecked" minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element type="seeCookieType" name="seeCookie" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="seeCurrentUrlEqualsType" name="seeCurrentUrlEquals" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="seeCurrentUrlMatchesType" name="seeCurrentUrlMatches" minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element type="seeFullUrlEqualsType" name="seeFullUrlEquals" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="seeFullUrlMatchesType" name="seeFullUrlMatches" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="seeElementType" name="seeElement" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="seeElementInDOMType" name="seeElementInDOM" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="seeInCurrentUrlType" name="seeInCurrentUrl" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="seeInFullUrlType" name="seeInFullUrl" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="seeInFieldType" name="seeInField" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="seeInFormFieldsType" name="seeInFormFields" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="seeInPageSourceType" name="seeInPageSource" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="seeInPopupType" name="seeInPopup" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="seeInSourceType" name="seeInSource" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="seeInTitleType" name="seeInTitle" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="seeLinkType" name="seeLink" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="seeNumberOfElementsType" name="seeNumberOfElements" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="seeOptionIsSelectedType" name="seeOptionIsSelected" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="selectOptionType" name="selectOption" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="setCookieType" name="setCookie" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="submitFormType" name="submitForm" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="switchToIFrameType" name="switchToIFrame" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="switchToNextTabType" name="switchToNextTab" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="switchToPreviousTabType" name="switchToPreviousTab" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="switchToWindowType" name="switchToWindow" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="typeInPopupType" name="typeInPopup" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="uncheckOptionType" name="uncheckOption" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="unselectOptionType" name="unselectOption" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="waitType" name="wait" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="waitForAjaxLoadType" name="waitForAjaxLoad" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="waitForElementChangeType" name="waitForElementChange" minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element type="waitForElementType" name="waitForElement" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="waitForElementNotVisibleType" name="waitForElementNotVisible" minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element type="waitForElementVisibleType" name="waitForElementVisible" minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element type="waitForJSType" name="waitForJS" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="waitForLoadingMaskToDisappearType" name="waitForLoadingMaskToDisappear" minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element type="waitForPageLoadType" name="waitForPageLoad" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="waitForTextType" name="waitForText" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="assertArrayHasKeyType" name="assertArrayHasKey" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="assertArrayNotHasKeyType" name="assertArrayNotHasKey" minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element type="assertArraySubsetType" name="assertArraySubset" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="assertContainsType" name="assertContains" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="assertCountType" name="assertCount" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="assertEmptyType" name="assertEmpty" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="assertEqualsType" name="assertEquals" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="assertFalseType" name="assertFalse" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="assertFileExistsType" name="assertFileExists" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="assertFileNotExistsType" name="assertFileNotExists" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="assertGreaterOrEqualsType" name="assertGreaterOrEquals" minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element type="assertGreaterThanType" name="assertGreaterThan" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="assertGreaterThanOrEqualType" name="assertGreaterThanOrEqual" minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element type="assertInstanceOfType" name="assertInstanceOf" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="assertInternalTypeType" name="assertInternalType" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="assertIsEmptyType" name="assertIsEmpty" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="assertLessOrEqualsType" name="assertLessOrEquals" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="assertLessThanType" name="assertLessThan" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="assertLessThanOrEqualType" name="assertLessThanOrEqual" minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element type="assertNotContainsType" name="assertNotContains" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="assertNotEmptyType" name="assertNotEmpty" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="assertNotEqualsType" name="assertNotEquals" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="assertNotInstanceOfType" name="assertNotInstanceOf" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="assertNotNullType" name="assertNotNull" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="assertNotRegExpType" name="assertNotRegExp" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="assertNotSameType" name="assertNotSame" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="assertNullType" name="assertNull" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="assertRegExpType" name="assertRegExp" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="assertSameType" name="assertSame" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="assertStringStartsNotWithType" name="assertStringStartsNotWith" minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element type="assertStringStartsWithType" name="assertStringStartsWith" minOccurs="0"
                        maxOccurs="unbounded"/>
            <xs:element type="assertTrueType" name="assertTrue" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="expectExceptionType" name="expectException" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="failType" name="fail" minOccurs="0" maxOccurs="unbounded"/>
        </xs:choice>
    </xs:group>

    <xs:group name="dataOperationTags">
        <xs:choice>
            <xs:element type="createDataType" name="createData" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element type="deleteDataType" name="deleteData" minOccurs="0" maxOccurs="unbounded"/>
        </xs:choice>
    </xs:group>

    <!-- Action Group ref -->

    <xs:complexType name="actions">
        <xs:sequence maxOccurs="unbounded" minOccurs="0">
            <xs:element name="argument">
                <xs:complexType>
                    <xs:attribute type="xs:string" name="name"/>
                    <xs:attribute type="xs:string" name="value"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute type="xs:string" name="ref" use="required"/>
        <xs:attribute type="xs:string" name="stepKey" use="required"/>
        <xs:attribute type="xs:string" name="before"/>
        <xs:attribute type="xs:string" name="after"/>
    </xs:complexType>

    <!-- Test action types -->

    <xs:complexType name="removeActionType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="keyForRemoval" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>


    <xs:complexType name="acceptPopupType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="stepKey"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="amOnPageType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="url"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="amOnSubdomainType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="url"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="amOnUrlType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="url"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="appendFieldType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertElementContainsAttributeType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="expectedValue"/>
                <xs:attribute type="xs:string" name="attribute" use="required"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="attachFileType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="cancelPopupType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="checkOptionType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="clearFieldType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="clickType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector"/>
                <xs:attribute type="xs:string" name="selectorArray"/>
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="clickWithLeftButtonType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector"/>
                <xs:attribute type="xs:string" name="selectorArray"/>
                <xs:attribute type="xs:string" name="x"/>
                <xs:attribute type="xs:string" name="y"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="clickWithRightButtonType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector"/>
                <xs:attribute type="xs:string" name="selectorArray"/>
                <xs:attribute type="xs:string" name="x"/>
                <xs:attribute type="xs:string" name="y"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="closeAdminNotificationType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="closeTabType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="commentType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="userInput" use="required"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="conditionalClickType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="dependentSelector" use="required"/>
                <xs:attribute type="xs:boolean" name="visible" use="required"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="createDataType">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element type="requiredEntityType" name="required-entity" minOccurs="0" maxOccurs="unbounded"/>
        </xs:choice>
        <xs:attribute type="xs:string" name="entity" use="required"/>
        <xs:attribute type="xs:string" name="stepKey" use="required"/>
        <xs:attribute type="xs:string" name="before"/>
        <xs:attribute type="xs:string" name="after"/>
        <xs:attribute type="xs:string" name="storeCode"/>
    </xs:complexType>
    <xs:complexType name="requiredEntityType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="createDataKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="updateDataType">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element type="requiredEntityType" name="required-entity" minOccurs="0" maxOccurs="unbounded"/>
        </xs:choice>
        <xs:attribute type="xs:string" name="entity" use="required"/>
        <xs:attribute type="xs:string" name="stepKey" use="required"/>
        <xs:attribute type="xs:string" name="createDataKey" use="required"/>
        <xs:attribute type="xs:string" name="before"/>
        <xs:attribute type="xs:string" name="after"/>
        <xs:attribute type="xs:string" name="storeCode"/>
    </xs:complexType>
    <xs:complexType name="deleteDataType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="createDataKey" use="required"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
                <xs:attribute type="xs:string" name="storeCode"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="getDataType">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element type="requiredEntityType" name="required-entity" minOccurs="0" maxOccurs="unbounded"/>
        </xs:choice>
        <xs:attribute type="xs:string" name="entity" use="required"/>
        <xs:attribute type="xs:string" name="stepKey" use="required"/>
        <xs:attribute type="xs:integer" name="index"/>
        <xs:attribute type="xs:string" name="before"/>
        <xs:attribute type="xs:string" name="after"/>
        <xs:attribute type="xs:string" name="storeCode"/>
    </xs:complexType>
    <xs:complexType name="dontSeeType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="selector"/>
                <xs:attribute type="xs:string" name="selectorArray"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="dontSeeCheckboxIsCheckedType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="dontSeeCookieType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="parameterArray"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="dontSeeCurrentUrlEqualsType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="url"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="dontSeeCurrentUrlMatchesType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="regex"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="dontSeeFullUrlEqualsType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="url" use="required"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="dontSeeFullUrlMatchesType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="regex" use="required"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="dontSeeElementType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="parameterArray"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="dontSeeElementInDOMType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="parameterArray"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="dontSeeInCurrentUrlType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="url"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="dontSeeInFullUrlType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="url" use="required"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="dontSeeInFieldType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector"/>
                <xs:attribute type="xs:string" name="selectorArray"/>
                <xs:attribute type="xs:string" name="userInput"/>

                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="dontSeeInFormFieldsType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="parameterArray"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="dontSeeInPageSourceType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="userInput"/>

                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="dontSeeInSourceType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="html" use="required"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="dontSeeInTitleType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="userInput"/>

                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="dontSeeJsErrorType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="dontSeeLinkType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="url"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="dontSeeOptionIsSelectedType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="doubleClickType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="dragAndDropType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector1" use="required"/>
                <xs:attribute type="xs:string" name="selector2" use="required"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="executeInSeleniumType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="function" use="required"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="executeJSType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="function" use="required"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="fillFieldType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector"/>
                <xs:attribute type="xs:string" name="selectorArray"/>
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="formatMoneyType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="locale"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="grabAttributeFromType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="grabCookieType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="parameterArray"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="grabFromCurrentUrlType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="regex"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="grabFromFullUrlType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="regex"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="grabMultipleType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="grabPageSourceType">
        <xs:simpleContent>
            <xs:extension base="xs:string">

                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="grabTextFromType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="grabValueFromType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector"/>
                <xs:attribute type="xs:string" name="selectorArray"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="loadSessionSnapshotType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="makeScreenshotType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="maximizeWindowType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="mSetLocaleType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="locale" use="required"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="mResetLocaleType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="moveBackType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="moveForwardType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="moveMouseOverType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector"/>
                <xs:attribute type="xs:string" name="selectorArray"/>
                <xs:attribute type="xs:string" name="x"/>
                <xs:attribute type="xs:string" name="y"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="openNewTabType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="parseFloatType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="userInput"/>

                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="pauseExecutionType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="performOnType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="function" use="required"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="pressKeyType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="parameterArray"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="reloadPageType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="resetCookieType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="parameterArray"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="resizeWindowType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="width" use="required"/>
                <xs:attribute type="xs:string" name="height" use="required"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="saveSessionSnapshotType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="scrollToType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector"/>
                <xs:attribute type="xs:string" name="selectorArray"/>
                <xs:attribute type="xs:string" name="x"/>
                <xs:attribute type="xs:string" name="y"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="scrollToTopOfPageType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="searchAndMultiSelectOptionType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="parameterArray" use="required"/>
                <xs:attribute type="xs:string" name="requiredAction"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="seeType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="selector"/>
                <xs:attribute type="xs:string" name="selectorArray"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="seeCheckboxIsCheckedType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="seeCookieType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="parameterArray"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="seeCurrentUrlEqualsType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="url"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="seeCurrentUrlMatchesType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="regex"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="seeFullUrlEqualsType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="url" use="required"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="seeFullUrlMatchesType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="regex" use="required"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="seeElementType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector"/>
                <xs:attribute type="xs:string" name="selectorArray"/>
                <xs:attribute type="xs:string" name="parameterArray"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="seeElementInDOMType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="parameterArray"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="seeInCurrentUrlType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="url"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="seeInFullUrlType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="url" use="required"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="seeInFieldType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector"/>
                <xs:attribute type="xs:string" name="selectorArray"/>
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="seeInFormFieldsType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="parameterArray" use="required"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="seeInPageSourceType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="html" use="required"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="seeInPopupType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="seeInSourceType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="html" use="required"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="seeInTitleType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="seeLinkType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="url"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="seeNumberOfElementsType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="parameterArray"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="seeOptionIsSelectedType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="selectOptionType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="parameterArray"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="setCookieType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="userInput" use="required"/>
                <xs:attribute type="xs:string" name="parameterArray"/>
                <xs:attribute type="xs:string" name="value" use="required"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="submitFormType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="parameterArray" use="required"/>
                <xs:attribute type="xs:string" name="button"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="switchToIFrameType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector"/>
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="switchToNextTabType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="switchToPreviousTabType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="switchToWindowType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="typeInPopupType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="uncheckOptionType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="unselectOptionType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="parameterArray"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="waitType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="time"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="waitForAjaxLoadType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="time"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="waitForElementChangeType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="function" use="required"/>
                <xs:attribute type="xs:string" name="time"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="waitForElementType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="time"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="waitForElementNotVisibleType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="time"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="waitForElementVisibleType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="selector" use="required"/>
                <xs:attribute type="xs:string" name="time"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="waitForJSType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="function" use="required"/>
                <xs:attribute type="xs:string" name="time"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="waitForLoadingMaskToDisappearType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="waitForPageLoadType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="time"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="waitForTextType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="userInput"/>
                <xs:attribute type="xs:string" name="time"/>
                <xs:attribute type="xs:string" name="selector"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertArrayHasKeyType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="expected" use="required"/>
                <xs:attribute type="assertEnum" name="expectedType" default="const"/>
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertArrayNotHasKeyType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="expected" use="required"/>
                <xs:attribute type="assertEnum" name="expectedType" default="const"/>
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertArraySubsetType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="expected" use="required"/>
                <xs:attribute type="assertEnum" name="expectedType" default="const"/>
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:boolean" name="strict"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertContainsType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="expected" use="required"/>
                <xs:attribute type="assertEnum" name="expectedType" default="const"/>
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertCountType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="expected" use="required"/>
                <xs:attribute type="assertEnum" name="expectedType" default="const"/>
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertEmptyType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertEqualsType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="expected" use="required"/>
                <xs:attribute type="assertEnum" name="expectedType" default="const"/>
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="delta"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertFalseType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertFileExistsType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertFileNotExistsType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertGreaterOrEqualsType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="expected" use="required"/>
                <xs:attribute type="assertEnum" name="expectedType" default="const"/>
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertGreaterThanType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="expected" use="required"/>
                <xs:attribute type="assertEnum" name="expectedType" default="const"/>
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertGreaterThanOrEqualType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="expected" use="required"/>
                <xs:attribute type="assertEnum" name="expectedType" default="const"/>
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertInstanceOfType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="expected" use="required"/>
                <xs:attribute type="assertEnum" name="expectedType" default="const"/>
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertInternalTypeType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="expected" use="required"/>
                <xs:attribute type="assertEnum" name="expectedType" default="const"/>
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertIsEmptyType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertLessOrEqualsType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="expected" use="required"/>
                <xs:attribute type="assertEnum" name="expectedType" default="const"/>
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertLessThanType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="expected" use="required"/>
                <xs:attribute type="assertEnum" name="expectedType" default="const"/>
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertLessThanOrEqualType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="expected" use="required"/>
                <xs:attribute type="assertEnum" name="expectedType" default="const"/>
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertNotContainsType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="expected" use="required"/>
                <xs:attribute type="assertEnum" name="expectedType" default="const"/>
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertNotEmptyType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertNotEqualsType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="expected" use="required"/>
                <xs:attribute type="assertEnum" name="expectedType" default="const"/>
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="delta"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertNotInstanceOfType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="expected" use="required"/>
                <xs:attribute type="assertEnum" name="expectedType" default="const"/>
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertNotNullType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertNotRegExpType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="expected" use="required"/>
                <xs:attribute type="assertEnum" name="expectedType" default="const"/>
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertNotSameType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="expected" use="required"/>
                <xs:attribute type="assertEnum" name="expectedType" default="const"/>
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertNullType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertRegExpType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="expected" use="required"/>
                <xs:attribute type="assertEnum" name="expectedType" default="const"/>
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertSameType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="expected" use="required"/>
                <xs:attribute type="assertEnum" name="expectedType" default="const"/>
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertStringStartsNotWithType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="expected" use="required"/>
                <xs:attribute type="assertEnum" name="expectedType" default="const"/>
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertStringStartsWithType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="expected" use="required"/>
                <xs:attribute type="assertEnum" name="expectedType" default="const"/>
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="assertTrueType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="message"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="expectExceptionType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="expected" use="required"/>
                <xs:attribute type="assertEnum" name="expectedType" default="const"/>
                <xs:attribute type="xs:string" name="actual" use="required"/>
                <xs:attribute type="assertEnum" name="actualType" default="const"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="failType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute type="xs:string" name="message" use="required"/>
                <xs:attribute type="xs:string" name="stepKey" use="required"/>
                <xs:attribute type="xs:string" name="before"/>
                <xs:attribute type="xs:string" name="after"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="assertEnum" final="restriction">
        <xs:restriction base="xs:string">
            <xs:enumeration value="int"/>
            <xs:enumeration value="float"/>
            <xs:enumeration value="bool"/>
            <xs:enumeration value="string"/>
            <xs:enumeration value="variable"/>
            <xs:enumeration value="array"/>
            <xs:enumeration value="const"/>
        </xs:restriction>
    </xs:simpleType>
</xs:schema>
